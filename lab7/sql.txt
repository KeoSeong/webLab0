Ex 1: Create DB and tables

CREATE DATABASE College;

USE College;

CREATE TABLE student(
	student_id INTEGER NOT NULL PRIMARY KEY,
	name VARCHAR(10) NOT NULL,
	year TINYINT NOT NULL DEFAULT "1",
	dept_no INTEGER NOT NULL,
	major VARCHAR(20)
);

CREATE TABLE department(
	dept_no INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,
	dept_name VARCHAR(20) NOT NULL UNIQUE,
	office VARCHAR(20) NOT NULL,
	office_tel VARCHAR(13)
);

ALTER TABLE student CHANGE COLUMN major major VARCHAR(40);

ALTER TABLE student ADD COLUMN gender VARCHAR(10);

ALTER TABLE department CHANGE COLUMN dept_name dept_name VARCHAR(40) NOT NULL;

ALTER TABLE department CHANGE COLUMN office office VARCHAR(30) NOT NULL;

Ex 2: Insert data

INSERT INTO student(student_id, name, year, dept_no, major) VALUES (20070002, 'James Bond', 3, 4, 'Business Administration'), (20060001, 'Queenie', 4, 4, 'Business Administration'), (20030001, 'Reonardo', 4, 2, 'Electronic Engineering'), (20040003, 'Julia', 3, 2, 'Electronic Engineering'), (20060002, 'Roosevelt', 3, 1, 'Computer Science'), (20100002, 'Fearne', 3, 4, 'Business Administration'), (20110001, 'Chloe', 2, 1, 'Computer Science'), (20080003, 'Amy', 4, 3, 'Law'), (20040002, 'Selina', 4, 5, 'English Literature'), (20070001, 'Ellen', 4, 4, 'Business Administration'), (20100001, 'Kathy', 3, 4, 'Business Administration'), (20110002, 'Lucy', 2, 2, 'Electronic Engineering'), (20030002, 'Michelle', 5, 1, 'Computer Science'), (20070003, 'April', 4, 3, 'Law'), (20070005, 'Alicia', 2, 5, 'English Literature'), (20100003, 'Yullia', 3, 1, 'Computer Science'), (20070007, 'Ashlee', 2, 4, 'Business Administration')

INSERT INTO department(dept_name, office, office_tel) VALUES ('Computer Science', 'Engineering building', '02-3290-0123'), ('Electronic Engineering', 'Engineering building', '02-3290-2345'), ('Law', 'Law building', '02-3290-7896'), ( 'Business Administration', 'Administration building', '02-3290-1112'), ('English Literature', 'Literature building', '02-3290-4412');

Ex 3: Updata & delete data

UPDATE department SET dept_name = 'Electronic and Electrical Engineering' WHERE dept_name = 'Electronic Engineering';

INSERT INTO department(dept_name, office, office_tel) VALUES ('Education', 'Education building', '02-3290-2347');

UPDATE student SET dept_no = 6, major = 'Education' WHERE name = 'Chloe';

DELETE FROM student WHERE name = 'Michelle';

DELETE FROM student WHERE name = 'Fearne';

Ex 4: Query data

SELECT * FROM student WHERE major = 'Computer science';

SELECT student_id, year, major FROM student;

SELECT * FROM student WHERE year = 3;

SELECT * FROM student WHERE year = 1 OR year = 2;

SELECT * FROM student WHERE dept_no = 4;

Ex 5: Advanced query

SELECT * FROM student WHERE student_id LIKE '2007%';

SELECT * FROM student ORDER BY student_id;

SELECT major FROM student GROUP BY major HAVING AVG(year) > 3;

SELECT * FROM student WHERE major = ‘Business Administration’ AND student_id LIKE '2007%' LIMIT 2;

Ex 6: Multi-table query - world DB

CREATE DATABASE World;

USE World;

SELECT c.name, l.language FROM countries c JOIN languages l ON c.code = l.country_code WHERE c.independence_year = 1948;

SELECT c.name FROM countries c JOIN languages l1 ON c.code = l1.country_code JOIN languages l2 ON c.code = l2.country_code WHERE l1.language = 'English' AND l1.official = 'T' AND l2.language = 'French' AND l2.official = 'T';

SELECT l.language FROM languages l JOIN countries c ON c.code = l.country_code WHERE c.life_expectancy > 75 GROUP BY l.language ORDER BY COUNT(l.language) DESC LIMIT 5;

SELECT capital FROM countries JOIN languages l1 ON countries.code = l1.country_code JOIN languages l2 ON countries.code = l2.country_code WHERE l1.language = 'Korean' AND l2.language = 'English';

SELECT capital FROM countries JOIN languages ON countries.code = languages.country_code WHERE languages.official = 'T' GROUP BY languages.language HAVING SUM(languages.percentage) > 20 AND SUM(languages.percentage) < 50;

select sum(surface_area) from countries c1 join (select c.name from countries c join cities c2 on c2.country_code = c.code group by c.name order by avg(c2.population) desc limit 5) c2 where c1.name = c2.name;

Ex 7: Multi-table query - imdb DB

CREATE DATABASE Imdb;

USE Imdb;

SELECT r.role FROM roles r JOIN movies m ON r.movie_id = m.id WHERE m.name = 'Pi';

SELECT DISTINCT a.first_name, a.last_name
FROM actors a
JOIN roles r ON a.id = r.actor_id
JOIN movies m ON m.id = r.movie_id
GROUP BY a.id
HAVING count(a.id) > any (select count(a.id) FROM actors a
JOIN roles r ON a.id = r.actor_id
JOIN movies m ON m.id = r.movie_id
GROUP BY a.id)
ORDER BY count(a.id) DESC
LIMIT 7;

SELECT d.first_name, d.last_name
FROM directors d
JOIN movies_directors md ON d.id=md.director_id
JOIN movies m ON m.id = md.movie_id
GROUP BY d.id
HAVING avg(m.rank) > ANY (SELECT avg(m.rank) FROM directors d
JOIN movies_directors md ON d.id=md.director_id
JOIN movies m ON m.id = md.movie_id
GROUP BY d.id )
ORDER BY avg(m.rank) DESC
LIMIT 3;

